# docker network create spring-cloud-network
version: '3.4'
networks:
  spring-cloud-network:
    external: true
services:
  # Netflix OSS
  config-store:
    image: putstack/config-store
    restart: on-failure
    networks:
      - spring-cloud-network
    environment:
      - EUREKA_URL=http://discovery:8761/eureka
      - RABBITMQ_HOST=rabbitmq-server
    deploy:
      replicas: 2
    ports:
      - "8999"
  discovery:
    image: putstack/discovery
    restart: on-failure
    networks:
      - spring-cloud-network
    environment:
      - CONFIG_STORE_URL=http://config-store:8999
    ports:
      - "8761:8761"
    depends_on:
      - config-store
  api-gateway:
    image: putstack/api-gateway
    restart: on-failure
    networks:
      - spring-cloud-network
    environment:
      - CONFIG_STORE_URL=http://config-store:8999
      - EUREKA_URL=http://discovery:8761/eureka
    ports:
      - "8000:8000"
    depends_on:
      - config-store
  # Microservice
  ## USER-SERVICE
  user-command:
    image: putstack/user-command
    restart: on-failure
    networks:
      - spring-cloud-network
    environment:
      - CONFIG_STORE_URL=http://config-store:8999
      - EUREKA_URL=http://discovery:8761/eureka
      - AXON_SERVER=axon-server:8124
      - RABBITMQ_HOST=rabbitmq-server
    ports:
      - "8033"
    depends_on:
      - config-store
  user-query:
    image: putstack/user-query
    restart: on-failure
    networks:
      - spring-cloud-network
    environment:
      - CONFIG_STORE_URL=http://config-store:8999
      - EUREKA_URL=http://discovery:8761/eureka
      - AXON_SERVER=axon-server:8124
      - RABBITMQ_HOST=rabbitmq-server
    ports:
      - "8034"
    depends_on:
      - config-store
  ## ORDER-SERVICE
  order-command:
    image: putstack/order-command
    restart: on-failure
    networks:
      - spring-cloud-network
    environment:
      - CONFIG_STORE_URL=http://config-store:8999
      - EUREKA_URL=http://discovery:8761/eureka
      - AXON_SERVER=axon-server:8124
      - RABBITMQ_HOST=rabbitmq-server
    ports:
      - "8003"
    depends_on:
      - config-store
  order-query:
    image: putstack/order-query
    restart: on-failure
    networks:
      - spring-cloud-network
    environment:
      - CONFIG_STORE_URL=http://config-store:8999
      - EUREKA_URL=http://discovery:8761/eureka
      - AXON_SERVER=axon-server:8124
      - RABBITMQ_HOST=rabbitmq-server
    ports:
      - "8004"
    depends_on:
      - config-store
  ## CATALOG-SERVICE
  catalog-command:
    image: putstack/catalog-command
    restart: on-failure
    networks:
      - spring-cloud-network
    environment:
      - CONFIG_STORE_URL=http://config-store:8999
      - EUREKA_URL=http://discovery:8761/eureka
      - AXON_SERVER=axon-server:8124
      - RABBITMQ_HOST=rabbitmq-server
    ports:
      - "8013"
    depends_on:
      - config-store
  catalog-query:
    image: putstack/catalog-query
    restart: on-failure
    networks:
      - spring-cloud-network
    environment:
      - CONFIG_STORE_URL=http://config-store:8999
      - EUREKA_URL=http://discovery:8761/eureka
      - AXON_SERVER=axon-server:8124
      - RABBITMQ_HOST=rabbitmq-server
    ports:
      - "8014"
    depends_on:
      - config-store
  ## Middleware
  # Axon Server
  axon-server:
    image: axoniq/axonserver
    restart: on-failure
    networks:
      - spring-cloud-network
    environment:
      - AXONIQ_AXONSERVER_DEVMODE_ENABLED=true
    ports:
      - "8024:8024"
      - "8124:8124"
  # RabbitMQ Server
  rabbitmq-server:
    image: rabbitmq:3-management
    restart: on-failure
    networks:
      - spring-cloud-network
    ports:
      - "5672:5672"
      - "15672:15672"
  # Zipkin Server
  zipkin-server:
    image: openzipkin/zipkin
    restart: on-failure
    networks:
      - spring-cloud-network
    ports:
      - "9411:9411"
  # Prometheus Server
  prometheus-server:
    image: prom/prometheus
    restart: on-failure
    networks:
      - spring-cloud-network
    ports:
      - "9090:9090"
    volumes:
       - ../resource/etc/prometheus-stage.yaml:/etc/prometheus/prometheus.yml
  # Grafana Server
  grafana-server:
    image: grafana/grafana
    restart: on-failure
    networks:
      - spring-cloud-network
    ports:
      - "3000:3000"
  
networks: 
  spring-cloud-network:
    external: true